name: Run JPF

on:
  push:

jobs:
  run-jpf:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: fefc2a03a1e46ce60ce4b03f223d83640fbef0f4
        path: graal
      
    - name: Download and install JVMCI-enabled JDK 8
      run: |
        curl -L -o labsjdk-ce-21.0.2+13-jvmci-23.1-b33-linux-amd64.tar.gz https://github.com/graalvm/labs-openjdk-21/releases/download/jvmci-23.1-b33/labsjdk-ce-21.0.2+13-jvmci-23.1-b33-linux-amd64.tar.gz
        tar -xzf labsjdk-ce-21.0.2+13-jvmci-23.1-b33-linux-amd64.tar.gz
        mv labsjdk-ce-21.0.2-jvmci-23.1-b33 labsjdk-ce-21
        sudo mv labsjdk-ce-21 /usr/lib/jvm
        echo 'export JAVA_HOME=/usr/lib/jvm/labsjdk-ce-21' >> $GITHUB_ENV
        echo "export JDK_VERSION_CHECK=ignore" >> $GITHUB_ENV

    - name: Verify Java version
      run: /usr/lib/jvm/labsjdk-ce-21/bin/java -version
    
    - name: Clone mx repositories
      run: |
        git clone https://github.com/graalvm/mx.git /tmp/mx
        cd /tmp/mx
        chmod +x mx
        
    - name: Build GraalVM
      run: |
        export JAVA_HOME=/usr/lib/jvm/labsjdk-ce-21
        export PATH="$JAVA_HOME/bin:$PATH"
        cd graal/vm
        export PATH="/tmp/mx:$PATH" >> $GITHUB_ENV
        mx --env ce build
  
    - name: Clone and build jpf-core
      run: |
        git clone https://github.com/javapathfinder/jpf-core.git /tmp/jpf-core
        cd /tmp/jpf-core
        ./gradlew buildJars
  
    - name: Run JPF on JAR files
      shell: bash
      run: |
        #!/bin/bash
        set +e 
        
        directory=$(pwd)
        runjpf_jar="/tmp/jpf-core/build/RunJPF.jar"
        jar_files=$(find "$directory" -type f -name "*.jar")
        for jar_file in $jar_files; 
        do
            jar_dir=$(dirname "$jar_file")
            main_class=$(unzip -p "$jar_file" META-INF/MANIFEST.MF | grep -i 'Main-Class' | awk -F': ' '{print $2}' | tr -d '\r')
            if [ -z "$main_class" ]; then
                continue
            fi
            command="java -jar $runjpf_jar +classpath=$jar_file $main_class"
            $command
        done
