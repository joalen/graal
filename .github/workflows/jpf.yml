name: JPF Runner

on:
  push:

jobs:
  run-jpf:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: fefc2a03a1e46ce60ce4b03f223d83640fbef0f4

    - name: Checkout mx repository
      uses: actions/checkout@v2
      with:
        repository: graalvm/mx
        path: mx
      
    - name: Download and install JVMCI-enabled JDK 8
      run: |
        curl -L -o labsjdk-ce-21.0.2+13-jvmci-23.1-b33-linux-amd64.tar.gz https://github.com/graalvm/labs-openjdk-21/releases/download/jvmci-23.1-b33/labsjdk-ce-21.0.2+13-jvmci-23.1-b33-linux-amd64.tar.gz
        tar -xzf labsjdk-ce-21.0.2+13-jvmci-23.1-b33-linux-amd64.tar.gz
        mv labsjdk-ce-21.0.2-jvmci-23.1-b33 labsjdk-ce-21
        sudo mv labsjdk-ce-21 /usr/lib/jvm/
        echo 'export JAVA_HOME=/usr/lib/jvm/labsjdk-ce-21' >> $GITHUB_ENV
        echo 'export PATH=$JAVA_HOME/bin:$(pwd)/mx:$PATH' >> $GITHUB_ENV

    - name: Set up environment variables
      run: |
        echo 'export JAVA_HOME=/usr/lib/jvm/jvmci-8' >> $BASH_ENV
        echo 'export PATH=$JAVA_HOME/bin:${{ github.workspace }}/mx:$PATH' >> $BASH_ENV
          
    - name: Build project with JVMCI-enabled JDK 8 + proprietary build suite
      run: mx --env ce build
  
    - name: Set up JDK 11 for JPF
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: maven
  
    - name: Clone and build jpf-core
      run: |
        git clone https://github.com/javapathfinder/jpf-core.git /tmp/jpf-core
        cd /tmp/jpf-core
        ./gradlew buildJars
  
    - name: Run JPF on JAR files
      run: |
        #!/bin/bash
  
        directory=$(pwd)
        runjpf_jar="/tmp/jpf-core/build/RunJPF.jar"
        jar_files=$(find "$directory" -type f -name "*.jar")
  
        for jar_file in $jar_files; 
        do
            jar_dir=$(dirname "$jar_file")
            main_class=$(unzip -p "$jar_file" META-INF/MANIFEST.MF | grep -i 'Main-Class' | awk -F': ' '{print $2}' | tr -d '\r')
  
            if [ -z "$main_class" ]; then
                echo "Main class not found in $jar_file, skipping..."
                continue
            fi

            command="java -jar $runjpf_jar +classpath=$jar_file $main_class"
            $command
        done
